spring.application.name=frontend-web


# Porta em que a aplicação de frontend será executada
# Escolha uma porta que não esteja em uso pelos seus outros microsserviços (8081, 8080, 8761)
# Sugestões: 80 (padrão HTTP, se disponível), 8082, 8083, etc.
server.port=8082

# Configuração do Thymeleaf (geralmente não precisa de muito aqui, os padrões são bons)
spring.thymeleaf.cache=false
# Definir como false durante o desenvolvimento para ver as alterações nos templates sem reiniciar
# Em produção, defina como true para melhor performance

# Configuração do Spring Web
spring.main.web-application-type=servlet
# O Spring Cloud Gateway é reativo, mas esta aplicação de frontend é mais tradicional (servlet-based)

# Propriedades para desenvolvimento (opcional, mas muito útil)
# Ativa o LiveReload e outras ferramentas de desenvolvimento do Spring Boot
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# Desativar a segurança básica padrão do Spring Boot se não estiver usando Spring Security
# Se você for adicionar Spring Security depois para proteger as páginas, remova esta linha.
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Se precisar de alguma configuração CORS, ela vai na classe Java (CorsConfig) e não aqui
# mas é bom ter em mente que o CORS pode ser necessário no Gateway ou nos microsserviços de backend.